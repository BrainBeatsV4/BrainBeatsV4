swagger: "2.0"
info:
  title: BrainBeatsWeb API 
  description: This is a BrainBeatsWeb API documentation form
  version: 1.0
  contact:
    email: seskirjeh@knights.ucf.edu
  licenses:
    name: Apache 2.0
    url: "http://www.apache.org/liscences/LIS"
  servers:
    -url: http://localhost:3306
    description: Local server
    -url: http://xyz.com/
    description: Original URL
schemes: [http]


paths:
#Returns an array of users
  /api/user:
    get:
      summary: Returns a list of all users.
      responses:
        200:    # status code
          description: Successul Response
          schema: 
            type: array
            items: 
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string


#Get Request with path id
  /api/user/findUser/Swagger:
    post:
      tags:
        - Users
      summary: Search a user by ID
      operationId: searchUser
      description: Search a user in the database
      consumes: 
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: searchUser
        description: userID
        schema:
          $ref: '#/definitions/searchUser'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found

# Post json/body & Body required
  /api/user:
    post:
      summary: Adds a new user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
      schema:
          $ref: '#/definitions/UpdateContact'
      responses:
        '200':
          description: OK


#File Upload Multiform Data
  /upload:
    post:
      tags:
        - Upload
      summary: Upload file
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: A file to upload.
        # - in: formData
        #   name: app
        #   type: string
        #   required: true
        #   description: Name of the model.
        # - in: formData
        #   name: id
        #   type: string
        #   required: true
        #   description: Some random Id.
      responses:
        200:
          description: Successful Response
        400:
          description: User Error
        500:
          description: Internal Server Error


definitions:
  searchUser:
    required: 
    - id
    properties:
      id:
        type: integer
        example: 1


# components:
#   schemas:
#     searchUser:
#       type: object
#       properties:
#         id:
#           type: integer
#           format: int64
#       required:
#         - id