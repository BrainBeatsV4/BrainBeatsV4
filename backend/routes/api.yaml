swagger: "2.0"
info:
  title: BrainBeatsWeb API 
  description: This is a BrainBeatsWeb API documentation form
  version: 1.0
  contact:
    email: seskirjeh@knights.ucf.edu
  liscence:
    name: Apache 2.0
    url: "http://www.apache.org/liscences/LIS"
  servers:
    -url: http://localhost:3306
    description: Local server
    -url: http://xyz.com/
    description: Original URL
schemes: [https,http]


paths:
#Returns a User
  /user:
    get:
      summary: Returns a list of users.
      description: People Who are already registered
      responses:
        200:    # status code
          description: Successful Response
          schema: 
            type: object
            properties:
              id:
                type: integer
              name:
                type: string

#Returns an array of Users
  /user:
    get:
      summary: Returns a list of users.
      description: People Who are already registered
      responses:
        200:    # status code
          description: Successul Response
          schema: 
            type: array
            items: 
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string


#Get Request with path id
  /user/{userId}:
    get:
      summary: Returns a user by ID.
      description: Returns the Specific User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type : integer
            format: int64
      responses: 
        '200':
          description: OK
          schema:
            type: object

#Post json/body & Body required
  # /create:
  #   post:
  #     summary: Adds a new user
  #     produces:
  #       - application/json
  #     consumes:
  #       - application/json
  #     parameters:
  #       - in: body
  #         name: body
  #         schema:
  #           type: object
  #           required:
  #             - name
  #             - id
  #           properties:
  #             id:
  #               type: integer
  #             name:
  #               type: string
  #     responses:
  #       '200':
  #         description: OK


#Defining Body Reference
  /create:
    post:
      summary: Creates new user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
           $ref: "#/components/schemas/user"
      responses:
        '200':
          description: OK


#File Upload Multiform Data
  /upload:
    post:
      tags:
        - Upload
      summary: Upload file
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: A file to upload.
        # - in: formData
        #   name: app
        #   type: string
        #   required: true
        #   description: Name of the model.
        # - in: formData
        #   name: id
        #   type: string
        #   required: true
        #   description: Some random Id.
      responses:
        200:
          description: Successful Response
        400:
          description: User Error
        500:
          description: Internal Server Error


#In Headers
  /string:
    get:
      summary: Checks if the server is alive
      parameters:
        - in: header
          name: X-Request-ID
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: Successful Response
        400:
          description: User Error
        500:
          description: Internal Server Error

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        name:
          type: string